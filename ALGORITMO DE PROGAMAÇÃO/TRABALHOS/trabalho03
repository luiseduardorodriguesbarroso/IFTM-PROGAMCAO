/*==============================================================
    CURSO: ENGENHARIA DE COMPUTACAO
    Nome: LUÍS EDUARDO RODRIGUES BARROSO
    1° PERIODO - ALGORITMO DE PROGRAMAÇÃO 
    1 SEMESTRE 2025
    Prof. Ernani Claudio Borges
    Data: 01/07/2025
*/
//===============================================================
//===============================================================
//======== LOCAL PARA DECLARAR AS INCLUDES E VARS GLOBAIS =======
//===============================================================

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <time.h>
#include <string.h>
#include <ctype.h>
#include <windows.h>
#define TAM1 50
#define TAM2 50
#define RAND_MAX_TEST 30

//===============================================================
//============== LOCAL PARA DECLARAR OS PROTOTIPOS ==============
//===============================================================
void limparTela();
void removeSpace(char *str);
void strtolower(char *str);
void recebernome(char *str);
int isaname(const char *str);
void validarnome(char *str);
void mostrarvalores(int matriz[TAM1][TAM2], int linha, int coluna);
int continuarf();

//===============================================================
//============== LOCAL PARA CRIAR OS M�DULOS DE FUN��ES =========
//===============================================================
void limparTela()
{
system("cls");  //limpa a tela no Whindows
}
//===============================================================
void removeSpace(char *str)
{
    int j = 0;
    for(int i = 0; str[i] != '\0'; i++)
        if(str[i] != ' ')
            str[j++] = str[i];
    str[j] = '\0';
}
//===============================================================
void strtolower(char *str)
{
    for(int i = 0; str[i] != '\0'; i++)
        str[i] = tolower(str[i]);
}
//===============================================================
void recebernome(char *str)
{
    fflush(stdin);
    gets(str);
}
//===============================================================
int isaname(const char *str)
{
    int i = -1;
    while(str[++i] == ' ' && str[i] != '\0');
    //printf("%c", str[i]);
    if(str[i] == toupper(str[i]))
        return 1;
    return 0;
}
//===============================================================
void validarnome(char *str)     //valida o nome dos alunos e ve se nome come�ou com a primeira letra maiuscula...
{
    int isname = 0;
    do{
        recebernome(str);
        isname = isaname(str);
        removeSpace(str);
        strtolower(str);
        if(!strcmp(str, ""))
        {
            printf("Nome invalida. Insira ao menos um caractere valido... ");
        }
        else if(!isname)
        {
            printf("\nErro!O nome do aluno devera comecar com letra maiuscula...Informe o nome do aluno novamente por favor...: ");
        }
    } while(!strcmp(str, "") || !isname);
}
//===============================================================
void mostrarvalores(int matriz[TAM1][TAM2], int linha, int coluna)
{
    printf("\nNumeros repetidos da matriz...\n\n");
    Sleep(150);
    int quantNumRep = 0;
        for (int k = 1; k <= RAND_MAX_TEST; k++)
        {
            int contagem = 0;
            for (int i = 0; i < linha; i++)
            {
                for(int j = 0; j < coluna; j++)
                {
                    if(matriz[i][j] == k)
                    {
                        contagem++;
                    }

                }
            }
            if(contagem >= 2)
            {
                printf("O numero %d aparece %d vezes.\n", k, contagem);
                quantNumRep++;
            }
        }
        if(quantNumRep == 0)
        {
            printf("Nao houve numeros repetidos.");
        }
}
//===============================================================
int continuarf()
{
    char resp[100];
    while(1){
        fflush(stdin);
        gets(resp);
        removeSpace(resp);
        strtolower(resp);
        if(!strcmp(resp, "s") || !strcmp(resp, "sim") || !strcmp(resp, "1"))
            return 1;
        else if(!strcmp(resp, "n") || !strcmp(resp, "nao") || !strcmp(resp, "0"))
            return 0;
        else
            printf("Resposta invalida... tente algo como \"Sim\" ou \"Nao\"! ");
    }
}
//===============================================================
//==============  CODIGO PRINCIPAL ==============================
//===============================================================
int main()
{
    srand(time(NULL));  //gera numeros aleatorios

    int matriz[TAM1][TAM2], linha, coluna, continuar = 1;
    char nome[100];

    for (int i = 0; i < TAM1; i++)
    {
        for(int j = 0; j < TAM2; j++)
        {
            matriz[i][j] = 0;
        }
    }
    while(continuar)
    {
        printf("\nInforme a quantidade de linhas ...: ");
        do
        {
            fflush(stdin);
            scanf("%d", &linha);
            if(linha < 1 || linha > TAM1)
            {
                printf("\nPor favor, informe um numero entre 1 e %d... ", TAM1);
            }
        } while (linha < 1 || linha > TAM1);

        printf("\nInforme a quantidade de colunas ...: ");
        //while(getchar() != '\n');
        do
        {
            fflush(stdin);
            scanf("%d", &coluna);
            if(coluna < 1 || coluna > TAM2)
            {
                printf("\nPor favor, informe um numero entre 1 e %d... ", TAM2);
            }
        } while (coluna < 1 || coluna > TAM2);

        printf("\nInforme o nome do aluno (Primeira letra mauscula) ...: ");
        //while(getchar() != '\n');
        validarnome(nome);

        limparTela();
        printf("\nGerando matriz...\n\n");
        Sleep(250);

        for (int i = 0; i < linha; i++)
        {
            for(int j = 0; j < coluna; j++)
            {
                matriz[i][j] = rand() % RAND_MAX_TEST + 1; //n�o ir� gerar zeros
            }
        }

        for (int i = 0; i < linha; i++)
        {
            for(int j = 0; j < coluna; j++)
            {
                printf("%3d ", matriz[i][j]);
            }
            printf("\n");
        }

        printf("\n");
        mostrarvalores(matriz, linha, coluna);

        printf("\nDeseja gerar uma nova matriz?\n");
        continuar = continuarf();
        limparTela();
    }
    //FIM DO ALGORITIMO
    limparTela();
    printf("\nFinalizando progama...");
    Sleep(750);     //pausa a tela por 750 milegundos
    printf ("\n\nAcabou...tchau...obrigado...\n\n");
    return 0;
}